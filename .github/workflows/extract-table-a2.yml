name: Extract Table from PDF as CSV

on:
  workflow_dispatch:
    inputs:
      pdf_url:
        description: 'URL of the PDF to process'
        required: true
        type: string
      pages:
        description: 'Pages to extract (e.g., "all", "1", "1-3", "1,3,5")'
        required: true
        type: string
        default: 'all'
      csv_output_name:
        description: 'Name of the output CSV file'
        required: true
        type: string
        default: 'extracted_tables.csv'

jobs:
  extract-tables:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install Java (required for tabula-py)
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '11'
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Extract tables from PDF
      run: |
        python scripts/extract_table.py \
          --pdf-url "${{ github.event.inputs.pdf_url }}" \
          --pages "${{ github.event.inputs.pages }}" \
          --output-csv "${{ github.event.inputs.csv_output_name }}"
    
    - name: Upload CSV artifact
      uses: actions/upload-artifact@v3
      with:
        name: extracted-tables
        path: ${{ github.event.inputs.csv_output_name }}
        if-no-files-found: error
    
    - name: Display extraction summary
      run: |
        echo "PDF URL: ${{ github.event.inputs.pdf_url }}"
        echo "Pages extracted: ${{ github.event.inputs.pages }}"
        echo "Output file: ${{ github.event.inputs.csv_output_name }}"
        if [ -f "${{ github.event.inputs.csv_output_name }}" ]; then
          echo "File size: $(du -h "${{ github.event.inputs.csv_output_name }}" | cut -f1)"
          echo "Number of lines: $(wc -l < "${{ github.event.inputs.csv_output_name }}")"
        fi
